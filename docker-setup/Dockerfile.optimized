# Optimized Multi-Stage Dockerfile for Railway
# Minimizes rebuilds for code changes

# Stage 1: Base Frappe Setup (Rarely changes)
FROM frappe/bench:latest as frappe-base

USER root
RUN apt-get update && apt-get install -y \
    postgresql-client \
    redis-tools \
    && rm -rf /var/lib/apt/lists/*

USER frappe
WORKDIR /home/frappe

# Initialize bench - this layer is cached
RUN bench init --skip-redis-config-generation --frappe-branch version-15 frappe-bench

WORKDIR /home/frappe/frappe-bench

# Install Python dependencies - cached layer
RUN pip install gunicorn psycopg2-binary

# Build Frappe assets once - cached layer
RUN bench build --app frappe || true

# Stage 2: Production Image with Code
FROM frappe-base as production

# Copy only the Flansa app code (changes frequently)
# This way, only this layer rebuilds when code changes
COPY --chown=frappe:frappe . /home/frappe/frappe-bench/apps/flansa/

# Install Flansa app (links to the copied code)
RUN bench get-app file:///home/frappe/frappe-bench/apps/flansa

# Build only Flansa assets
RUN bench build --app flansa || true

# Copy startup script
COPY --chown=frappe:frappe docker-setup/railway-production-live.sh ./start.sh
RUN chmod +x start.sh

EXPOSE 8080

CMD ["./start.sh"]